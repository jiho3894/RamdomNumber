{"version":3,"sources":["components/Box.js","components/Board.js","components/RamdomNumber.js","components/Timer.js","App.js","index.js"],"names":["Container","styled","div","Box","num","handleClick","onClick","Board","numbers","map","index","Front","Back","Timer","useState","timeElapsed","setTimeElapsed","record","useRef","current","useEffect","timer","setInterval","alert","clearInterval","Math","floor","Body","array","i","push","RamdomNumber","setNumbers","gameFlag","setGameFlag","setCurrent","endGame","indexOf","slice","Button","variant","size","length","j","random","shuffleArray","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAOMA,EAAYC,IAAOC,IAAV,+SAaAC,EAjBH,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,YACjB,OAAO,cAACL,EAAD,CAAWM,QAAS,kBAAMD,EAAYD,IAAtC,SAAoD,IAAPA,EAAWA,EAAM,QCAjEJ,EAAYC,IAAOC,IAAV,qNAoBAK,EAVD,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,QAASH,EAAiB,EAAjBA,YACvB,OACE,cAAC,EAAD,UACGG,EAAQC,KAAI,SAACL,EAAKM,GAAN,OACX,cAAC,EAAD,CAAKL,YAAaA,EAAaD,IAAKA,GAAUM,SCOtD,ICDA,I,IAAMV,EAAYC,IAAOC,IAAV,kMAWTS,EAAQV,IAAOC,IAAV,kDAILU,EAAOX,IAAOC,IAAV,2CAIKW,EAxCf,WACE,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACMC,EAASC,mBAWf,OAVAD,EAAOE,QAAUJ,EACjBK,qBAAU,WACR,IAAMC,EAAQC,aAAY,WACxBN,GAAe,SAAAD,GAAW,OAAIA,EAAc,QAC3C,IACH,OAAO,WACLQ,MAAM,yCAAD,OAAYN,EAAOE,QAAU,IAA7B,+BACLK,cAAcH,MAEf,IAED,eAAC,EAAD,WACE,eAACV,EAAD,WAAQc,KAAKC,MAAMX,EAAc,KAAjC,OACA,cAACH,EAAD,UAAQG,EAAc,IAAQ,S,QDZ9BY,EAAO1B,IAAOC,IAAV,8JASJF,EAAYC,IAAOC,IAAV,oIAQX0B,EAAQ,GACJC,EAAI,EAAGA,GAAG,GAAIA,IACpBD,EAAME,KAAKD,GAGb,I,EAyDeE,EAzDM,WACnB,MAA8BjB,mBAASc,GAAvC,mBAAOpB,EAAP,KAAgBwB,EAAhB,KACA,EAAgClB,oBAAS,GAAzC,mBAAOmB,EAAP,KAAiBC,EAAjB,KACA,EAA8BpB,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBgB,EAAhB,KAgCMC,EAAU,WACdF,GAAY,IAGd,OACE,eAACP,EAAD,WACE,0FACA,cAAC,EAAD,UACGM,EACC,qCACE,cAAC,EAAD,CAAOzB,QAASA,EAASH,YAxCf,SAACD,GACrB,GAAGA,IAAQe,EAAS,CACP,KAARf,IACDmB,MAAM,kCACNa,KAEF,IAAM1B,EAAQF,EAAQ6B,QAAQjC,GAC9B4B,GAAW,SAAAxB,GAAO,4BACbA,EAAQ8B,MAAM,EAAG5B,IADJ,CAEhBN,EAAM,GAAKA,EAAM,GAAK,GAFN,YAGbI,EAAQ8B,MAAM5B,EAAQ,QAE3ByB,GAAW,SAAAhB,GAAO,OAAIA,EAAU,SA6BxB,cAAC,EAAD,IACA,cAACoB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKnC,QAAS8B,EAA7C,yCAGF,cAACG,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,KAAKnC,QArB1B,WAChB0B,EATmB,SAAAJ,GACnB,IAAK,IAAIC,EAAID,EAAMc,OAAS,EAAGb,EAAI,EAAGA,IAAK,CACzC,IAAIc,EAAIlB,KAAKC,MAAMD,KAAKmB,UAAYf,EAAI,IADC,EAElB,CAACD,EAAMe,GAAIf,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMe,GAFwB,KAI3C,OAAOf,EAIIiB,CAAajB,IACxBO,EAAW,GACXD,GAAY,IAkBN,yBE3EJP,EAAO1B,IAAOC,IAAV,oIAiBK4C,EATH,WACV,OACE,cAAC,EAAD,UACE,cAAC,EAAD,OCXNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a939e016.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Box = ({num, handleClick}) =>{\r\n  return <Container onClick={() => handleClick(num)}>{num !==0 ? num : null}</Container>;\r\n}\r\n\r\nconst Container = styled.div`\r\n  border: 1px solid rgba(0,0,0,0.8);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  &:hover {\r\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.8) inset, 0px 0px 5px rgba(200,200,200,0.5);\r\n  }\r\n`;\r\n\r\nexport default Box;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Box from './Box';\r\n\r\nconst Container = styled.div`\r\n  width: 700px;\r\n  height: 700px;\r\n  border: 1px solid blue;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-template-rows: repeat(5, 1fr);\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst Board = ({numbers, handleClick}) => {\r\n  return(\r\n    <Container>\r\n      {numbers.map((num, index) => (\r\n        <Box handleClick={handleClick} num={num} key={index}></Box>\r\n      ))}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Board from './Board';\r\nimport { useState } from \"react\";\r\nimport Timer from \"./Timer\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 800px;\r\n  height: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nlet array = [];\r\nfor(let i = 1; i<=25; i++) {\r\n  array.push(i);\r\n}\r\n\r\nconst RamdomNumber = () => {\r\n  const [numbers, setNumbers] = useState(array);\r\n  const [gameFlag, setGameFlag] = useState(false);\r\n  const [current, setCurrent] = useState(1);\r\n\r\n  const handleClick = (num) => {\r\n  if(num === current) {\r\n    if(num === 50) {\r\n      alert(\"축하합니다\");\r\n      endGame();\r\n    }\r\n    const index = numbers.indexOf(num);\r\n    setNumbers(numbers => [\r\n      ...numbers.slice(0, index),\r\n      num < 26 ? num + 25 : 0,\r\n      ...numbers.slice(index + 1)\r\n    ]);\r\n    setCurrent(current => current + 1);\r\n    }\r\n  }\r\n\r\n  const shuffleArray = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const gameStart = () => {\r\n    setNumbers(shuffleArray(array));\r\n    setCurrent(1);\r\n    setGameFlag(true);\r\n  }\r\n\r\n  const endGame = () => {\r\n    setGameFlag(false);\r\n  }\r\n\r\n  return (\r\n    <Body>\r\n      <h1>랜덤숫자 맞추기 게임</h1>\r\n      <Container>\r\n        {gameFlag ? (\r\n          <>\r\n            <Board numbers={numbers} handleClick={handleClick}/>\r\n            <Timer/>\r\n            <Button variant=\"primary\" size=\"lg\" onClick={endGame}>그만하기</Button>\r\n          </>\r\n        ) : (\r\n          <Button variant=\"primary\" size=\"lg\" onClick={gameStart}>Start</Button>\r\n        )}\r\n      </Container>\r\n    </Body>\r\n  )\r\n}\r\n\r\nexport default RamdomNumber;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Timer() {\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const record = useRef();\r\n  record.current = timeElapsed;\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeElapsed(timeElapsed => timeElapsed + 30);\r\n    }, 30);\r\n    return () => {\r\n      alert(`당신의 기록은 ${record.current / 1000}초 입니다.`);\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Front>{Math.floor(timeElapsed / 1000)}:</Front>\r\n      <Back>{(timeElapsed % 1000) / 10}</Back>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-top: 15px;\r\n  width: 100px;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 35px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Front = styled.div`\r\n  text-align: right;\r\n`;\r\n\r\nconst Back = styled.div`\r\n  width: 1em;\r\n`;\r\n\r\nexport default Timer;","import React from \"react\";\nimport styled from \"styled-components\";\nimport RamdomNumber from \"./components/RamdomNumber\";\n\nconst Body = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst App = () =>{\n  return (\n    <Body>\n      <RamdomNumber></RamdomNumber>\n    </Body>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}